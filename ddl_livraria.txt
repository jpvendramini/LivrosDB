CREATE TABLE autores (
    aut_id            NUMBER(6) NOT NULL,
    aut_primeiro_nome VARCHAR2(15) NOT NULL,
    aut_meio_nome     VARCHAR2(15),
    aut_ultimo_nome   VARCHAR2(30) NOT NULL
);

ALTER TABLE autores ADD CONSTRAINT pk_aut PRIMARY KEY ( aut_id );

CREATE TABLE categoria (
    ctg_id     NUMBER(6) NOT NULL,
    ctg_genero VARCHAR2(45) NOT NULL
);

ALTER TABLE categoria ADD CONSTRAINT pk_ctg PRIMARY KEY ( ctg_id );

CREATE TABLE clientes (
    clt_id            NUMBER(6) NOT NULL,
    clt_primeiro_nome VARCHAR2(30) NOT NULL,
    clt_meio_nome     VARCHAR2(15),
    clt_ultimo_nome   VARCHAR2(30) NOT NULL,
    cls_identificacao unknown 
--  ERROR: Datatype UNKNOWN is not allowed 

);

ALTER TABLE clientes ADD CONSTRAINT pk_clt PRIMARY KEY ( clt_id );

CREATE TABLE funcionarios (
    fnc_id            NUMBER(6) NOT NULL,
    fnc_primeiro_nome VARCHAR2(30) NOT NULL,
    fnc_meio_nome     VARCHAR2(15),
    fnc_ultimo_nome   VARCHAR2(30) NOT NULL,
    fnc_matricula     VARCHAR2(30) NOT NULL,
    fnc_cargo         VARCHAR2(20) NOT NULL
);

ALTER TABLE funcionarios ADD CONSTRAINT pk_fnc PRIMARY KEY ( fnc_id );

CREATE TABLE livros (
    lvo_id           NUMBER(6) NOT NULL,
    lvo_titulo       VARCHAR2(45) NOT NULL,
    lvo_edicao       VARCHAR2(45) NOT NULL,
    lvo_volume       VARCHAR2(20) NOT NULL,
    lvo_isbn         NUMBER(13) NOT NULL,
    lvo_preco_capa   NUMBER,
    lvo_preco_venda  NUMBER,
    lvo_icms         NUMBER NOT NULL,
    autores_aut_id   NUMBER(6) NOT NULL,
    categoria_ctg_id NUMBER(6) NOT NULL,
    vendas_vnd_id    NUMBER(6) NOT NULL
);

ALTER TABLE livros ADD CONSTRAINT pk_lvo PRIMARY KEY ( lvo_id );

CREATE TABLE vendas (
    vnd_id              NUMBER(6) NOT NULL,
    vnd_data            DATE NOT NULL,
    vnd_icms_total      NUMBER,
    vnd_total           NUMBER,
    funcionarios_fnc_id NUMBER(6) NOT NULL,
    clientes_clt_id     NUMBER(6) NOT NULL
);

CREATE UNIQUE INDEX vendas__idx ON
    vendas (
        funcionarios_fnc_id
    ASC );

CREATE UNIQUE INDEX vendas__idxv1 ON
    vendas (
        clientes_clt_id
    ASC );

ALTER TABLE vendas ADD CONSTRAINT pk_vnd PRIMARY KEY ( vnd_id );

ALTER TABLE livros
    ADD CONSTRAINT fk_lvo_aut FOREIGN KEY ( autores_aut_id )
        REFERENCES autores ( aut_id );

ALTER TABLE livros
    ADD CONSTRAINT fk_lvo_ctg FOREIGN KEY ( categoria_ctg_id )
        REFERENCES categoria ( ctg_id );

ALTER TABLE livros
    ADD CONSTRAINT fk_lvo_vnd FOREIGN KEY ( vendas_vnd_id )
        REFERENCES vendas ( vnd_id );

ALTER TABLE vendas
    ADD CONSTRAINT fk_vnd_cls FOREIGN KEY ( clientes_clt_id )
        REFERENCES clientes ( clt_id );

ALTER TABLE vendas
    ADD CONSTRAINT fk_vnd_fnc FOREIGN KEY ( funcionarios_fnc_id )
        REFERENCES funcionarios ( fnc_id );


-- Comments on tables
COMMENT ON TABLE livros IS 'Armazena as informações do livro';
COMMENT ON TABLE categoria IS 'Genero de cada livro';
COMMENT ON TABLE autores IS 'O autor(a) de cada livro';
COMMENT ON TABLE vendas IS 'Armazena toda venda realizada bem como cliente e funcionario';
COMMENT ON TABLE funcionarios IS 'Armazena os dados do funcionario';
COMMENT ON TABLE clientes IS 'Armazena os dados do cliente';

-- Comments on columns
COMMENT ON COLUMN livros.lvo_id IS 'PK da tabela';
COMMENT ON COLUMN livros.lvo_titulo IS 'O titulo da obra/livro';
COMMENT ON COLUMN livros.lvo_edicao IS 'A edicao atual da obra';
COMMENT ON COLUMN livros.lvo_volume IS 'O volume da obra';
COMMENT ON COLUMN livros.lvo_isbn IS 'O codigo nacional para identificacao do livro';
COMMENT ON COLUMN livros.lvo_preco_capa IS 'O preco de capa do livro, i.e. o preço levando em consideração custo fixo e variável para fazer o exemplar';
COMMENT ON COLUMN livros.lvo_preco_venda IS 'O preço cobrado pela livraria';
COMMENT ON COLUMN livros.lvo_icms IS 'Imposto cobrado por livro';
COMMENT ON COLUMN livros.lvo_AUTORES_aut_id IS 'FK que referencia o autor do livro';
COMMENT ON COLUMN livros.lvo_CATEGORIA_ctg_id IS 'FK que referencia o gênero do livro';
COMMENT ON COLUMN livros.lvo_VENDAS_vnd_id IS '';

COMMENT ON COLUMN autores.aut_id IS 'PK da tabela';
COMMENT ON COLUMN autores.aut_primeiro_nome IS 'O primeiro nome do autor';
COMMENT ON COLUMN autores.aut_meio_nome IS 'O nome do meio do autor (se houver)';
COMMENT ON COLUMN autores.aut_ultimo_nome IS 'O sobrenome do autor';

COMMENT ON COLUMN categoria.ctg_id IS 'PK da tabela';
COMMENT ON COLUMN categoria.ctg_genero IS 'O genêro da obra';

COMMENT ON COLUMN funcionarios.fnc_id IS 'PK da tabela';
COMMENT ON COLUMN funcionarios.fnc_primeiro_nome IS 'O primeiro nome do funcionário';
COMMENT ON COLUMN funcionarios.fnc_meio_nome IS 'O nome do meio do funcionário';
COMMENT ON COLUMN funcionarios.fnc_ultimo_nome IS 'O ultimo nome do funcionario';
COMMENT ON COLUMN funcionarios.fnc_matricula IS 'A matricula do funcionario';
COMMENT ON COLUMN funcionarios.fnc_cargo IS 'O cargo ocupado pelo funcionario atualmente';

COMMENT ON COLUMN clientes.clt_id IS 'PK da tabela';
COMMENT ON COLUMN clientes.clt_primeiro_nome IS 'O primeiro nome do cliente';
COMMENT ON COLUMN clientes.clt_meio_nome IS 'O nome do meio do cliente';
COMMENT ON COLUMN clientes.clt_ultimo_nome IS 'O ultimo nome do cliente';
COMMENT ON COLUMN clientes.clt_identificacao IS 'A identificação do cliente - RG ou CPF';

--Sequences and triggers CLIENTES
CREATE SEQUENCE sqe_clt NOCACHE;

CREATE TRIGGER tg_seq_clt
BEFORE INSERT
ON clientes
FOR EACH ROW
BEGIN
:new.clt_id:=sqe_clt.nextval;
END;
/

--Sequences and triggers FUNCIONARIOS
CREATE SEQUENCE sqe_fnc NOCACHE;

CREATE TRIGGER tg_seq_fnc
BEFORE INSERT
ON funcionarios
FOR EACH ROW
BEGIN
:new.fnc_id:=sqe_fnc.nextval;
END;
/

--Sequences and triggers CATEGORIAS
CREATE SEQUENCE sqe_ctg NOCACHE;

CREATE TRIGGER tg_seq_ctg
BEFORE INSERT
ON categoria
FOR EACH ROW
BEGIN
:new.ctg_id:=sqe_ctg.nextval;
END;
/


--Sequences and triggers AUTORES
CREATE SEQUENCE sqe_aut NOCACHE;

CREATE TRIGGER tg_seq_aut
BEFORE INSERT
ON autores
FOR EACH ROW
BEGIN
:new.aut_id:=sqe_aut.nextval;
END;
/

--Sequences and triggers VENDAS
CREATE SEQUENCE seq_vnd nocache;

CREATE TRIGGER tg_seq_vnd
BEFORE INSERT
ON vendas
FOR EACH ROW
BEGIN
    seq_vdn.nextval
    :new.vnd_id := seq_vdn.nextval;
END;
/


--Sequences and triggers LIVROS
CREATE SEQUENCE sqe_lvo NOCACHE;

CREATE TRIGGER tg_seq_lvo
BEFORE INSERT
ON livros
FOR EACH ROW
BEGIN
:new.lvo_id:=sqe_lvo.nextval;
END;
/